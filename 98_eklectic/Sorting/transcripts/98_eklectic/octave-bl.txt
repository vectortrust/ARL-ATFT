# 3D Edge Navigation Models - Multiple Platforms

## 1. Octave/MATLAB Code

```matlab
% Edge Navigation 3D Model in Octave/MATLAB
clear; clc;

% Create parameter grids
distance = linspace(0, 10, 100);              % Distance from chaos
risk_tolerance = linspace(0.1, 1.0, 50);      % Risk tolerance parameter

[D, R] = meshgrid(distance, risk_tolerance);

% Fixed parameters
adaptability = 0.7;
chaos_point = 5.0;

% Calculate distance from chaos
dist_from_chaos = abs(D - chaos_point);

% Performance function
Performance = zeros(size(D));
for i = 1:size(D,1)
    for j = 1:size(D,2)
        d = dist_from_chaos(i,j);
        r = R(i,j);
        
        if d > 3
            % Comfort zone
            Performance(i,j) = 0.6 + 0.1 * sin(D(i,j));
        elseif d > r
            % Edge zone
            edge_factor = (3 - d) / 3;
            Performance(i,j) = 0.6 + 0.4 * edge_factor * adaptability;
        else
            % Chaos zone
            chaos_factor = r - d;
            Performance(i,j) = max(0.1, 0.6 - 2 * chaos_factor / r);
        end
    end
end

% Insight function
Insight = 0.3 + 0.7 * exp(-dist_from_chaos);

% Stress function
Stress = 0.2 + 0.8 * exp(-dist_from_chaos * 2);

% Total utility
Utility = Performance + Insight - Stress;

% Create 3D plots
figure(1);
surf(D, R, Performance);
title('Performance Surface');
xlabel('Distance from Chaos');
ylabel('Risk Tolerance');
zlabel('Performance');
colorbar;

figure(2);
surf(D, R, Insight);
title('Insight Surface');
xlabel('Distance from Chaos');
ylabel('Risk Tolerance');
zlabel('Insight');
colorbar;

figure(3);
surf(D, R, Utility);
title('Total Utility Surface');
xlabel('Distance from Chaos');
ylabel('Risk Tolerance');
zlabel('Utility');
colorbar;

% Export data for Blender
save('edge_navigation_data.mat', 'D', 'R', 'Performance', 'Insight', 'Stress', 'Utility');

% Export as CSV for other tools
csvwrite('distance.csv', D);
csvwrite('risk_tolerance.csv', R);
csvwrite('performance.csv', Performance);
csvwrite('insight.csv', Insight);
csvwrite('utility.csv', Utility);
